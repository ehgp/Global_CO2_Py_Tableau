<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0818.2120                               -->
<workbook source-build='2019.2.3 (20192.19.0818.2120)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='nation.1751_2011' inline='true' name='federated.02w1mdn082gqz816rsiot1ml5umt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='nation.1751_2011' name='textscan.1yo65cz1rvwwkb1e9azcu1tttixt'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/erick/Downloads/nation.1751_2011.csv' dataRefreshTime='' directory='C:/Users/erick/Downloads' filename='C:/Users/erick/AppData/Local/Temp/TableauTemp/0g283h910bmvwa19el45h1e1vf70/nation.1751_2011.csv.xlsx' interpretationMode='8' password='' port='0' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1yo65cz1rvwwkb1e9azcu1tttixt' name='nation.1751_2011.csv' table='[nation.1751_2011#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:J16510:no:A1:J16510:4' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='&quot;Nation&quot; &quot;Nation&quot; (Note: missing values denoted by &quot;.&quot;) Source: Tom Boden and Bob Andres (Oak Ridge National Laboratory); Gregg' ordinal='0' />
            <column datatype='integer' name='&quot;Year&quot; &quot;Year&quot;' ordinal='1' />
            <column datatype='integer' name='&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot; &quot;Total CO2 emissions from fossil-fuel' ordinal='2' />
            <column datatype='integer' name='&quot;Emissions from solid fuel consumption&quot; &quot;Emissions from solid fuel consumption&quot;' ordinal='3' />
            <column datatype='integer' name='&quot;Emissions from liquid fuel consumption&quot; &quot;Emissions from liquid fuel consumption&quot;' ordinal='4' />
            <column datatype='integer' name='&quot;Emissions from gas fuel consumption&quot; &quot;Emissions from gas fuel consumption&quot;' ordinal='5' />
            <column datatype='integer' name='&quot;Emissions from cement production&quot; &quot;Emissions from cement production&quot;' ordinal='6' />
            <column datatype='integer' name='&quot;Emissions from gas flaring&quot; &quot;Emissions from gas flaring&quot;' ordinal='7' />
            <column datatype='real' name='&quot;Per capita CO2 emissions (metric tons of carbon)&quot; &quot;Per capita CO2 emissions (metric tons of carbon)&quot;' ordinal='8' />
            <column datatype='integer' name='&quot;Emissions from bunker fuels (not included in the totals)&quot; &quot;Emissions from bunker fuels (not included in the totals)&quot;' ordinal='9' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>&quot;Nation&quot; (Note: missing values denoted by &quot;.&quot;) Source: Tom Boden and Bob Andres (Oak Ridge National Laboratory); Gregg Marland </remote-name>
            <remote-type>130</remote-type>
            <local-name>[&quot;Nation&quot; (Note: missing values denoted by &quot;.&quot;) Source: Tom Boden and Bob Andres (Oak Ridge National Laboratory); Gregg Marland ]</local-name>
            <parent-name>[nation.1751_2011.csv]</parent-name>
            <remote-alias>&quot;Nation&quot; (Note: missing values denoted by &quot;.&quot;) Source: Tom Boden and Bob Andres (Oak Ridge National Laboratory); Gregg Marland </remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&quot;Year&quot;</remote-name>
            <remote-type>20</remote-type>
            <local-name>[&quot;Year&quot;]</local-name>
            <parent-name>[nation.1751_2011.csv]</parent-name>
            <remote-alias>&quot;Year&quot;</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;</remote-name>
            <remote-type>20</remote-type>
            <local-name>[&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;]</local-name>
            <parent-name>[nation.1751_2011.csv]</parent-name>
            <remote-alias>&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&quot;Emissions from solid fuel consumption&quot;</remote-name>
            <remote-type>20</remote-type>
            <local-name>[&quot;Emissions from solid fuel consumption&quot;]</local-name>
            <parent-name>[nation.1751_2011.csv]</parent-name>
            <remote-alias>&quot;Emissions from solid fuel consumption&quot;</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&quot;Emissions from liquid fuel consumption&quot;</remote-name>
            <remote-type>20</remote-type>
            <local-name>[&quot;Emissions from liquid fuel consumption&quot;]</local-name>
            <parent-name>[nation.1751_2011.csv]</parent-name>
            <remote-alias>&quot;Emissions from liquid fuel consumption&quot;</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&quot;Emissions from gas fuel consumption&quot;</remote-name>
            <remote-type>20</remote-type>
            <local-name>[&quot;Emissions from gas fuel consumption&quot;]</local-name>
            <parent-name>[nation.1751_2011.csv]</parent-name>
            <remote-alias>&quot;Emissions from gas fuel consumption&quot;</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&quot;Emissions from cement production&quot;</remote-name>
            <remote-type>20</remote-type>
            <local-name>[&quot;Emissions from cement production&quot;]</local-name>
            <parent-name>[nation.1751_2011.csv]</parent-name>
            <remote-alias>&quot;Emissions from cement production&quot;</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&quot;Emissions from gas flaring&quot;</remote-name>
            <remote-type>20</remote-type>
            <local-name>[&quot;Emissions from gas flaring&quot;]</local-name>
            <parent-name>[nation.1751_2011.csv]</parent-name>
            <remote-alias>&quot;Emissions from gas flaring&quot;</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&quot;Per capita CO2 emissions (metric tons of carbon)&quot;</remote-name>
            <remote-type>5</remote-type>
            <local-name>[&quot;Per capita CO2 emissions (metric tons of carbon)&quot;]</local-name>
            <parent-name>[nation.1751_2011.csv]</parent-name>
            <remote-alias>&quot;Per capita CO2 emissions (metric tons of carbon)&quot;</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>&quot;Emissions from bunker fuels (not included in the totals)&quot;</remote-name>
            <remote-type>20</remote-type>
            <local-name>[&quot;Emissions from bunker fuels (not included in the totals)&quot;]</local-name>
            <parent-name>[nation.1751_2011.csv]</parent-name>
            <remote-alias>&quot;Emissions from bunker fuels (not included in the totals)&quot;</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[nation.1751_2011.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J16509:no:A1:J16509:3&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>138296</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Nation' datatype='string' name='[&quot;Nation&quot; (Note: missing values denoted by &quot;.&quot;) Source: Tom Boden and Bob Andres (Oak Ridge National Laboratory); Gregg Marland ]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;ANTARCTIC FISHERIES&quot;' value='&quot;Antarctica&quot;' />
          <semantic-value key='&quot;CHINA (MAINLAND)&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;CZECHOSLOVAKIA&quot;' value='&quot;Czechia&quot;' />
          <semantic-value key='&quot;DEMOCRATIC REPUBLIC OF THE CONGO (FORMERLY ZAIRE)&quot;' value='&quot;Democratic Republic of Congo&quot;' />
          <semantic-value key='&quot;DEMOCRATIC REPUBLIC OF VIETNAM&quot;' value='&quot;Viet Nam&quot;' />
          <semantic-value key='&quot;EAST &amp; WEST PAKISTAN&quot;' value='&quot;Pakistan&quot;' />
          <semantic-value key='&quot;FEDERATION OF MALAYA-SINGAPORE&quot;' value='&quot;Singapore&quot;' />
          <semantic-value key='&quot;FORMER DEMOCRATIC YEMEN&quot;' value='&quot;Yemen&quot;' />
          <semantic-value key='&quot;FORMER GERMAN DEMOCRATIC REPUBLIC&quot;' value='&quot;Germany&quot;' />
          <semantic-value key='&quot;FORMER PANAMA CANAL ZONE&quot;' value='&quot;Panama&quot;' />
          <semantic-value key='&quot;FORMER YEMEN&quot;' value='&quot;Yemen&quot;' />
          <semantic-value key='&quot;FRANCE (INCLUDING MONACO)&quot;' value='&quot;France&quot;' />
          <semantic-value key='&quot;FRENCH EQUATORIAL AFRICA&quot;' value='&quot;Western Sahara&quot;' />
          <semantic-value key='&quot;FRENCH INDO-CHINA&quot;' value='&quot;Laos&quot;' />
          <semantic-value key='&quot;FRENCH WEST AFRICA&quot;' value='&quot;Western Sahara&quot;' />
          <semantic-value key='&quot;HONG KONG SPECIAL ADMINSTRATIVE REGION OF CHINA&quot;' value='&quot;Hong Kong&quot;' />
          <semantic-value key='&quot;ITALY (INCLUDING SAN MARINO)&quot;' value='&quot;Italy&quot;' />
          <semantic-value key='&quot;JAPAN (EXCLUDING THE RUYUKU ISLANDS)&quot;' value='&quot;Japan&quot;' />
          <semantic-value key='&quot;KUWAITI OIL FIRES&quot;' value='&quot;Kuwait&quot;' />
          <semantic-value key='&quot;LEEWARD ISLANDS&quot;' value='&quot;Cayman Islands&quot;' />
          <semantic-value key='&quot;LIBYAN ARAB JAMAHIRIYAH&quot;' value='&quot;Libya&quot;' />
          <semantic-value key='&quot;MACAU SPECIAL ADMINSTRATIVE REGION OF CHINA&quot;' value='&quot;Macau&quot;' />
          <semantic-value key='&quot;MYANMAR (FORMERLY BURMA)&quot;' value='&quot;Myanmar&quot;' />
          <semantic-value key='&quot;NETHERLAND ANTILLES&quot;' value='&quot;Aruba&quot;' />
          <semantic-value key='&quot;NETHERLAND ANTILLES AND ARUBA&quot;' value='&quot;Aruba&quot;' />
          <semantic-value key='&quot;OCCUPIED PALESTINIAN TERRITORY&quot;' value='&quot;Palestinian Territories&quot;' />
          <semantic-value key='&quot;PENINSULAR MALAYSIA&quot;' value='&quot;Malaysia&quot;' />
          <semantic-value key='&quot;PLURINATIONAL STATE OF BOLIVIA&quot;' value='&quot;Bolivia&quot;' />
          <semantic-value key='&quot;REPUBLIC OF SOUTH VIETNAM&quot;' value='&quot;Viet Nam&quot;' />
          <semantic-value key='&quot;RHODESIA-NYASALAND&quot;' value='&quot;Zimbabwe&quot;' />
          <semantic-value key='&quot;RWANDA-URUNDI&quot;' value='&quot;Rwanda&quot;' />
          <semantic-value key='&quot;RYUKYU ISLANDS&quot;' value='&quot;Japan&quot;' />
          <semantic-value key='&quot;UNITED KOREA&quot;' value='&quot;South Korea&quot;' />
          <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
          <semantic-value key='&quot;YUGOSLAVIA (FORMER SOCIALIST FEDERAL REPUBLIC)&quot;' value='&quot;Montenegro&quot;' />
          <semantic-value key='&quot;YUGOSLAVIA (MONTENEGRO &amp; SERBIA)&quot;' value='&quot;Serbia&quot;' />
          <semantic-value key='&quot;ZANZIBAR&quot;' value='&quot;Zimbabwe&quot;' />
        </semantic-values>
      </column>
      <column caption='Year' datatype='integer' name='[&quot;Year&quot;]' role='dimension' type='quantitative' />
      <column caption='Forecast Total CO2' datatype='real' name='[Calculation_900157037083324417]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='4.293e+08*ln([&quot;Year&quot;])+-3.25657e+09' />
      </column>
      <column caption='Forecast Per Capita' datatype='real' name='[Calculation_900157037083881474]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-3.81179e-12*[&quot;Year&quot;]^4+3.08085e-08*[&quot;Year&quot;]^3+-9.33776e-05*[&quot;Year&quot;]^2+3.14464*[&quot;Year&quot;]+-5823.67' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Count' datatype='date' datatype-customized='true' name='[Year (copy)]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy&quot;, STR([&quot;Year&quot;]) )) ' />
      </column>
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.364011' measure-ordering='alphabetic' measure-percentage='0.635989' rowDisplayCount='18000' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Calculation_1208090653182836745' />
        <field-sort-custom-order field='&quot;Nation&quot; (Note: missing values denoted by &quot;.&quot;) Source: Tom Boden and Bob Andres (Oak Ridge National Laboratory); Gregg Marland ' />
        <field-sort-custom-order field='&quot;Year&quot;' />
        <field-sort-custom-order field='Year (copy 2)' />
        <field-sort-custom-order field='Year (copy)' />
        <field-sort-custom-order field='&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;' />
        <field-sort-custom-order field='&quot;Emissions from solid fuel consumption&quot;' />
        <field-sort-custom-order field='&quot;Emissions from liquid fuel consumption&quot;' />
        <field-sort-custom-order field='&quot;Emissions from gas fuel consumption&quot;' />
        <field-sort-custom-order field='&quot;Emissions from cement production&quot;' />
        <field-sort-custom-order field='&quot;Emissions from gas flaring&quot;' />
        <field-sort-custom-order field='&quot;Per capita CO2 emissions (metric tons of carbon)&quot;' />
        <field-sort-custom-order field='&quot;Emissions from bunker fuels (not included in the totals)&quot;' />
        <field-sort-custom-order field='Calculation_900157037083324417' />
        <field-sort-custom-order field='Calculation_900157037083881474' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Exponential'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Exponential Forecast of Total CO2 Emissions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='nation.1751_2011' name='federated.02w1mdn082gqz816rsiot1ml5umt' />
          </datasources>
          <datasource-dependencies datasource='federated.02w1mdn082gqz816rsiot1ml5umt'>
            <column datatype='integer' name='[&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[&quot;Year&quot;]' role='dimension' type='quantitative' />
            <column-instance column='[&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;]' derivation='Sum' forecast-column-base='[sum:&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;:qk]' forecast-column-type='forecast-value' name='[fVal:sum:&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;:qk]' pivot='key' type='quantitative' />
            <column-instance column='[&quot;Year&quot;]' derivation='None' name='[none:&quot;Year&quot;:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;]' derivation='Sum' name='[sum:&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.02w1mdn082gqz816rsiot1ml5umt].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='exp' />
          </pane>
        </panes>
        <rows>[federated.02w1mdn082gqz816rsiot1ml5umt].[fVal:sum:&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;:qk]</rows>
        <cols>[federated.02w1mdn082gqz816rsiot1ml5umt].[none:&quot;Year&quot;:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='99.000000' enabled='true' fill-type='fill-zero' ignore-last='0' model-type='auto' range-periods='None' range-size='19' range-type='end-of' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{C6F34059-95AA-4E6E-98FD-DE31D1B34F23}' />
    </worksheet>
    <worksheet name='Logarithmic'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Logarithmic Forecast of Total CO2 Emissions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='nation.1751_2011' name='federated.02w1mdn082gqz816rsiot1ml5umt' />
          </datasources>
          <datasource-dependencies datasource='federated.02w1mdn082gqz816rsiot1ml5umt'>
            <column datatype='integer' name='[&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[&quot;Year&quot;]' role='dimension' type='quantitative' />
            <column-instance column='[&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;]' derivation='Sum' forecast-column-base='[sum:&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;:qk]' forecast-column-type='forecast-value' name='[fVal:sum:&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;:qk]' pivot='key' type='quantitative' />
            <column-instance column='[&quot;Year&quot;]' derivation='None' name='[none:&quot;Year&quot;:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;]' derivation='Sum' name='[sum:&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.02w1mdn082gqz816rsiot1ml5umt].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='log' />
          </pane>
        </panes>
        <rows>[federated.02w1mdn082gqz816rsiot1ml5umt].[fVal:sum:&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;:qk]</rows>
        <cols>[federated.02w1mdn082gqz816rsiot1ml5umt].[none:&quot;Year&quot;:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='99.000000' enabled='true' fill-type='fill-zero' ignore-last='0' model-type='auto' range-periods='None' range-size='19' range-type='end-of' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{55BC6FF2-1402-44F5-A643-D7EE0E74DDB3}' />
    </worksheet>
    <worksheet name='Per Capita Logarithmic'>
      <table>
        <view>
          <datasources>
            <datasource caption='nation.1751_2011' name='federated.02w1mdn082gqz816rsiot1ml5umt' />
          </datasources>
          <datasource-dependencies datasource='federated.02w1mdn082gqz816rsiot1ml5umt'>
            <column datatype='real' name='[&quot;Per capita CO2 emissions (metric tons of carbon)&quot;]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[&quot;Year&quot;]' role='dimension' type='quantitative' />
            <column-instance column='[&quot;Per capita CO2 emissions (metric tons of carbon)&quot;]' derivation='Sum' forecast-column-base='[sum:&quot;Per capita CO2 emissions (metric tons of carbon)&quot;:qk]' forecast-column-type='forecast-value' name='[fVal:sum:&quot;Per capita CO2 emissions (metric tons of carbon)&quot;:qk]' pivot='key' type='quantitative' />
            <column-instance column='[&quot;Year&quot;]' derivation='None' name='[none:&quot;Year&quot;:ok]' pivot='key' type='ordinal' />
            <column-instance column='[&quot;Year&quot;]' derivation='None' name='[none:&quot;Year&quot;:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[&quot;Per capita CO2 emissions (metric tons of carbon)&quot;]' derivation='Sum' name='[sum:&quot;Per capita CO2 emissions (metric tons of carbon)&quot;:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02w1mdn082gqz816rsiot1ml5umt].[none:&quot;Year&quot;:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:&quot;Year&quot;:ok]' />
              <groupfilter from='1751' function='range' level='[none:&quot;Year&quot;:ok]' to='1949' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.02w1mdn082gqz816rsiot1ml5umt].[none:&quot;Year&quot;:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02w1mdn082gqz816rsiot1ml5umt].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline degree='4' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
          </pane>
        </panes>
        <rows>[federated.02w1mdn082gqz816rsiot1ml5umt].[fVal:sum:&quot;Per capita CO2 emissions (metric tons of carbon)&quot;:qk]</rows>
        <cols>[federated.02w1mdn082gqz816rsiot1ml5umt].[none:&quot;Year&quot;:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='0' model-type='auto' range-periods='None' range-size='19' range-type='end-of' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{F148B242-C1D1-4406-8E7F-E48899E2DD1A}' />
    </worksheet>
    <worksheet name='Polynomial'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Polynomial Forecast of Total CO2 Emissions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='nation.1751_2011' name='federated.02w1mdn082gqz816rsiot1ml5umt' />
          </datasources>
          <datasource-dependencies datasource='federated.02w1mdn082gqz816rsiot1ml5umt'>
            <column datatype='integer' name='[&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[&quot;Year&quot;]' role='dimension' type='quantitative' />
            <column-instance column='[&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;]' derivation='Sum' forecast-column-base='[sum:&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;:qk]' forecast-column-type='forecast-value' name='[fVal:sum:&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;:qk]' pivot='key' type='quantitative' />
            <column-instance column='[&quot;Year&quot;]' derivation='None' name='[none:&quot;Year&quot;:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;]' derivation='Sum' name='[sum:&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.02w1mdn082gqz816rsiot1ml5umt].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline degree='4' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
          </pane>
        </panes>
        <rows>[federated.02w1mdn082gqz816rsiot1ml5umt].[fVal:sum:&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;:qk]</rows>
        <cols>[federated.02w1mdn082gqz816rsiot1ml5umt].[none:&quot;Year&quot;:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='99.000000' enabled='true' fill-type='fill-zero' ignore-last='0' model-type='auto' range-periods='None' range-size='19' range-type='end-of' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{E5D65947-B12E-4BF7-BD4F-3607977468EA}' />
    </worksheet>
    <worksheet name='Time Lapse Map Per Capita'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Time Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='nation.1751_2011' name='federated.02w1mdn082gqz816rsiot1ml5umt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.02w1mdn082gqz816rsiot1ml5umt'>
            <column caption='Nation' datatype='string' name='[&quot;Nation&quot; (Note: missing values denoted by &quot;.&quot;) Source: Tom Boden and Bob Andres (Oak Ridge National Laboratory); Gregg Marland ]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;ANTARCTIC FISHERIES&quot;' value='&quot;Antarctica&quot;' />
                <semantic-value key='&quot;CHINA (MAINLAND)&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;CZECHOSLOVAKIA&quot;' value='&quot;Czechia&quot;' />
                <semantic-value key='&quot;DEMOCRATIC REPUBLIC OF THE CONGO (FORMERLY ZAIRE)&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;DEMOCRATIC REPUBLIC OF VIETNAM&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;EAST &amp; WEST PAKISTAN&quot;' value='&quot;Pakistan&quot;' />
                <semantic-value key='&quot;FEDERATION OF MALAYA-SINGAPORE&quot;' value='&quot;Singapore&quot;' />
                <semantic-value key='&quot;FORMER DEMOCRATIC YEMEN&quot;' value='&quot;Yemen&quot;' />
                <semantic-value key='&quot;FORMER GERMAN DEMOCRATIC REPUBLIC&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;FORMER PANAMA CANAL ZONE&quot;' value='&quot;Panama&quot;' />
                <semantic-value key='&quot;FORMER YEMEN&quot;' value='&quot;Yemen&quot;' />
                <semantic-value key='&quot;FRANCE (INCLUDING MONACO)&quot;' value='&quot;France&quot;' />
                <semantic-value key='&quot;FRENCH EQUATORIAL AFRICA&quot;' value='&quot;Western Sahara&quot;' />
                <semantic-value key='&quot;FRENCH INDO-CHINA&quot;' value='&quot;Laos&quot;' />
                <semantic-value key='&quot;FRENCH WEST AFRICA&quot;' value='&quot;Western Sahara&quot;' />
                <semantic-value key='&quot;HONG KONG SPECIAL ADMINSTRATIVE REGION OF CHINA&quot;' value='&quot;Hong Kong&quot;' />
                <semantic-value key='&quot;ITALY (INCLUDING SAN MARINO)&quot;' value='&quot;Italy&quot;' />
                <semantic-value key='&quot;JAPAN (EXCLUDING THE RUYUKU ISLANDS)&quot;' value='&quot;Japan&quot;' />
                <semantic-value key='&quot;KUWAITI OIL FIRES&quot;' value='&quot;Kuwait&quot;' />
                <semantic-value key='&quot;LEEWARD ISLANDS&quot;' value='&quot;Cayman Islands&quot;' />
                <semantic-value key='&quot;LIBYAN ARAB JAMAHIRIYAH&quot;' value='&quot;Libya&quot;' />
                <semantic-value key='&quot;MACAU SPECIAL ADMINSTRATIVE REGION OF CHINA&quot;' value='&quot;Macau&quot;' />
                <semantic-value key='&quot;MYANMAR (FORMERLY BURMA)&quot;' value='&quot;Myanmar&quot;' />
                <semantic-value key='&quot;NETHERLAND ANTILLES&quot;' value='&quot;Aruba&quot;' />
                <semantic-value key='&quot;NETHERLAND ANTILLES AND ARUBA&quot;' value='&quot;Aruba&quot;' />
                <semantic-value key='&quot;OCCUPIED PALESTINIAN TERRITORY&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;PENINSULAR MALAYSIA&quot;' value='&quot;Malaysia&quot;' />
                <semantic-value key='&quot;PLURINATIONAL STATE OF BOLIVIA&quot;' value='&quot;Bolivia&quot;' />
                <semantic-value key='&quot;REPUBLIC OF SOUTH VIETNAM&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;RHODESIA-NYASALAND&quot;' value='&quot;Zimbabwe&quot;' />
                <semantic-value key='&quot;RWANDA-URUNDI&quot;' value='&quot;Rwanda&quot;' />
                <semantic-value key='&quot;RYUKYU ISLANDS&quot;' value='&quot;Japan&quot;' />
                <semantic-value key='&quot;UNITED KOREA&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;YUGOSLAVIA (FORMER SOCIALIST FEDERAL REPUBLIC)&quot;' value='&quot;Montenegro&quot;' />
                <semantic-value key='&quot;YUGOSLAVIA (MONTENEGRO &amp; SERBIA)&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;ZANZIBAR&quot;' value='&quot;Zimbabwe&quot;' />
              </semantic-values>
            </column>
            <column datatype='real' name='[&quot;Per capita CO2 emissions (metric tons of carbon)&quot;]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[&quot;Year&quot;]' role='dimension' type='quantitative' />
            <column aggregation='Count' datatype='date' datatype-customized='true' name='[Year (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy&quot;, STR([&quot;Year&quot;]) )) ' />
            </column>
            <column-instance column='[&quot;Nation&quot; (Note: missing values denoted by &quot;.&quot;) Source: Tom Boden and Bob Andres (Oak Ridge National Laboratory); Gregg Marland ]' derivation='None' name='[none:&quot;Nation&quot; (Note: missing values denoted by &quot;.&quot;) Source: Tom Boden and Bob Andres (Oak Ridge National Laboratory); Gregg Marland :nk]' pivot='key' type='nominal' />
            <column-instance column='[&quot;Per capita CO2 emissions (metric tons of carbon)&quot;]' derivation='None' name='[none:&quot;Per capita CO2 emissions (metric tons of carbon)&quot;:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (copy)]' derivation='Year' name='[yr:Year (copy):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02w1mdn082gqz816rsiot1ml5umt].[yr:Year (copy):ok]'>
            <groupfilter function='member' level='[yr:Year (copy):ok]' member='1973' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.02w1mdn082gqz816rsiot1ml5umt].[yr:Year (copy):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.02w1mdn082gqz816rsiot1ml5umt].[Longitude (generated)]' field-type='quantitative' max='-18831174.677663043' min='-58906191.363241538' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.02w1mdn082gqz816rsiot1ml5umt].[Latitude (generated)]' field-type='quantitative' max='15056004.223636091' min='-8383484.5483843656' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.02w1mdn082gqz816rsiot1ml5umt].[yr:Year (copy):ok]' value='Year'>
              <formatted-text>
                <run>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.02w1mdn082gqz816rsiot1ml5umt].[none:&quot;Per capita CO2 emissions (metric tons of carbon)&quot;:qk]' />
              <lod column='[federated.02w1mdn082gqz816rsiot1ml5umt].[none:&quot;Nation&quot; (Note: missing values denoted by &quot;.&quot;) Source: Tom Boden and Bob Andres (Oak Ridge National Laboratory); Gregg Marland :nk]' />
              <geometry column='[federated.02w1mdn082gqz816rsiot1ml5umt].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.02w1mdn082gqz816rsiot1ml5umt].[Latitude (generated)]</rows>
        <cols>[federated.02w1mdn082gqz816rsiot1ml5umt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{51AD7DEB-DD31-4271-BFDB-E82CA34C1E9A}' />
    </worksheet>
    <worksheet name='Time Lapse Map Total CO2 Emission per Year '>
      <layout-options>
        <title>
          <formatted-text>
            <run>Time Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='nation.1751_2011' name='federated.02w1mdn082gqz816rsiot1ml5umt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.02w1mdn082gqz816rsiot1ml5umt'>
            <column caption='Nation' datatype='string' name='[&quot;Nation&quot; (Note: missing values denoted by &quot;.&quot;) Source: Tom Boden and Bob Andres (Oak Ridge National Laboratory); Gregg Marland ]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;ANTARCTIC FISHERIES&quot;' value='&quot;Antarctica&quot;' />
                <semantic-value key='&quot;CHINA (MAINLAND)&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;CZECHOSLOVAKIA&quot;' value='&quot;Czechia&quot;' />
                <semantic-value key='&quot;DEMOCRATIC REPUBLIC OF THE CONGO (FORMERLY ZAIRE)&quot;' value='&quot;Democratic Republic of Congo&quot;' />
                <semantic-value key='&quot;DEMOCRATIC REPUBLIC OF VIETNAM&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;EAST &amp; WEST PAKISTAN&quot;' value='&quot;Pakistan&quot;' />
                <semantic-value key='&quot;FEDERATION OF MALAYA-SINGAPORE&quot;' value='&quot;Singapore&quot;' />
                <semantic-value key='&quot;FORMER DEMOCRATIC YEMEN&quot;' value='&quot;Yemen&quot;' />
                <semantic-value key='&quot;FORMER GERMAN DEMOCRATIC REPUBLIC&quot;' value='&quot;Germany&quot;' />
                <semantic-value key='&quot;FORMER PANAMA CANAL ZONE&quot;' value='&quot;Panama&quot;' />
                <semantic-value key='&quot;FORMER YEMEN&quot;' value='&quot;Yemen&quot;' />
                <semantic-value key='&quot;FRANCE (INCLUDING MONACO)&quot;' value='&quot;France&quot;' />
                <semantic-value key='&quot;FRENCH EQUATORIAL AFRICA&quot;' value='&quot;Western Sahara&quot;' />
                <semantic-value key='&quot;FRENCH INDO-CHINA&quot;' value='&quot;Laos&quot;' />
                <semantic-value key='&quot;FRENCH WEST AFRICA&quot;' value='&quot;Western Sahara&quot;' />
                <semantic-value key='&quot;HONG KONG SPECIAL ADMINSTRATIVE REGION OF CHINA&quot;' value='&quot;Hong Kong&quot;' />
                <semantic-value key='&quot;ITALY (INCLUDING SAN MARINO)&quot;' value='&quot;Italy&quot;' />
                <semantic-value key='&quot;JAPAN (EXCLUDING THE RUYUKU ISLANDS)&quot;' value='&quot;Japan&quot;' />
                <semantic-value key='&quot;KUWAITI OIL FIRES&quot;' value='&quot;Kuwait&quot;' />
                <semantic-value key='&quot;LEEWARD ISLANDS&quot;' value='&quot;Cayman Islands&quot;' />
                <semantic-value key='&quot;LIBYAN ARAB JAMAHIRIYAH&quot;' value='&quot;Libya&quot;' />
                <semantic-value key='&quot;MACAU SPECIAL ADMINSTRATIVE REGION OF CHINA&quot;' value='&quot;Macau&quot;' />
                <semantic-value key='&quot;MYANMAR (FORMERLY BURMA)&quot;' value='&quot;Myanmar&quot;' />
                <semantic-value key='&quot;NETHERLAND ANTILLES&quot;' value='&quot;Aruba&quot;' />
                <semantic-value key='&quot;NETHERLAND ANTILLES AND ARUBA&quot;' value='&quot;Aruba&quot;' />
                <semantic-value key='&quot;OCCUPIED PALESTINIAN TERRITORY&quot;' value='&quot;Palestinian Territories&quot;' />
                <semantic-value key='&quot;PENINSULAR MALAYSIA&quot;' value='&quot;Malaysia&quot;' />
                <semantic-value key='&quot;PLURINATIONAL STATE OF BOLIVIA&quot;' value='&quot;Bolivia&quot;' />
                <semantic-value key='&quot;REPUBLIC OF SOUTH VIETNAM&quot;' value='&quot;Viet Nam&quot;' />
                <semantic-value key='&quot;RHODESIA-NYASALAND&quot;' value='&quot;Zimbabwe&quot;' />
                <semantic-value key='&quot;RWANDA-URUNDI&quot;' value='&quot;Rwanda&quot;' />
                <semantic-value key='&quot;RYUKYU ISLANDS&quot;' value='&quot;Japan&quot;' />
                <semantic-value key='&quot;UNITED KOREA&quot;' value='&quot;South Korea&quot;' />
                <semantic-value key='&quot;USSR&quot;' value='&quot;Russia&quot;' />
                <semantic-value key='&quot;YUGOSLAVIA (FORMER SOCIALIST FEDERAL REPUBLIC)&quot;' value='&quot;Montenegro&quot;' />
                <semantic-value key='&quot;YUGOSLAVIA (MONTENEGRO &amp; SERBIA)&quot;' value='&quot;Serbia&quot;' />
                <semantic-value key='&quot;ZANZIBAR&quot;' value='&quot;Zimbabwe&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[&quot;Year&quot;]' role='dimension' type='quantitative' />
            <column aggregation='Count' datatype='date' datatype-customized='true' name='[Year (copy)]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATEPARSE ( &quot;yyyy&quot;, STR([&quot;Year&quot;]) )) ' />
            </column>
            <column-instance column='[&quot;Nation&quot; (Note: missing values denoted by &quot;.&quot;) Source: Tom Boden and Bob Andres (Oak Ridge National Laboratory); Gregg Marland ]' derivation='None' name='[none:&quot;Nation&quot; (Note: missing values denoted by &quot;.&quot;) Source: Tom Boden and Bob Andres (Oak Ridge National Laboratory); Gregg Marland :nk]' pivot='key' type='nominal' />
            <column-instance column='[&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;]' derivation='None' name='[none:&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year (copy)]' derivation='Year' name='[yr:Year (copy):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02w1mdn082gqz816rsiot1ml5umt].[yr:Year (copy):ok]'>
            <groupfilter function='member' level='[yr:Year (copy):ok]' member='1995' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.02w1mdn082gqz816rsiot1ml5umt].[yr:Year (copy):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.02w1mdn082gqz816rsiot1ml5umt].[Longitude (generated)]' field-type='quantitative' max='-18831174.677663043' min='-58906191.363241538' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.02w1mdn082gqz816rsiot1ml5umt].[Latitude (generated)]' field-type='quantitative' max='15056004.223636091' min='-8383484.5483843656' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.02w1mdn082gqz816rsiot1ml5umt].[yr:Year (copy):ok]' value='Year'>
              <formatted-text>
                <run>Year</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.02w1mdn082gqz816rsiot1ml5umt].[none:&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;:qk]' />
              <lod column='[federated.02w1mdn082gqz816rsiot1ml5umt].[none:&quot;Nation&quot; (Note: missing values denoted by &quot;.&quot;) Source: Tom Boden and Bob Andres (Oak Ridge National Laboratory); Gregg Marland :nk]' />
              <geometry column='[federated.02w1mdn082gqz816rsiot1ml5umt].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.02w1mdn082gqz816rsiot1ml5umt].[Latitude (generated)]</rows>
        <cols>[federated.02w1mdn082gqz816rsiot1ml5umt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{EBABC235-1DA2-4A61-97A8-AB6F11E66AEC}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Exponential'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.02w1mdn082gqz816rsiot1ml5umt].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7295A75F-C97C-49CE-AA1A-15DFD8F2AE39}' />
    </window>
    <window class='worksheet' name='Polynomial'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.02w1mdn082gqz816rsiot1ml5umt].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{3EF9E76F-D7F1-436F-B626-BE475D11E158}' />
    </window>
    <window class='worksheet' maximized='true' name='Logarithmic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.02w1mdn082gqz816rsiot1ml5umt].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <floating-toolbar-visibility value='1' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1E043FB0-6410-4F5C-BCA6-FC48AD233C52}' />
    </window>
    <window class='worksheet' name='Per Capita Logarithmic'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.02w1mdn082gqz816rsiot1ml5umt].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02w1mdn082gqz816rsiot1ml5umt].[none:&quot;Year&quot;:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99B8BE77-8D5E-49C0-BA12-0EEB1D511373}' />
    </window>
    <window class='worksheet' name='Time Lapse Map Total CO2 Emission per Year '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.02w1mdn082gqz816rsiot1ml5umt].[yr:Year (copy):ok]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[federated.02w1mdn082gqz816rsiot1ml5umt].[none:&quot;Total CO2 emissions from fossil-fuels and cement production (thousand metric tons of C)&quot;:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{94AC6A3F-86D0-4D39-B528-69083FCFE7C3}' />
    </window>
    <window class='worksheet' name='Time Lapse Map Per Capita'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[federated.02w1mdn082gqz816rsiot1ml5umt].[yr:Year (copy):ok]' show-all='false' type='filter' />
            <card pane-specification-id='0' param='[federated.02w1mdn082gqz816rsiot1ml5umt].[none:&quot;Per capita CO2 emissions (metric tons of carbon)&quot;:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02w1mdn082gqz816rsiot1ml5umt].[none:&quot;Per capita CO2 emissions (metric tons of carbon)&quot;:qk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{A612D4EF-F6B5-4D0D-8383-E18493DC4AF8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Exponential' width='192'>
      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
      /9Aaj6bfoHNHAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Logarithmic' width='192'>
      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
      OUABvT0eMZIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Per Capita Logarithmic' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Polynomial' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAaWElEQVR4nO3d2XNc+XXY8e9dem+gsS/EDhIkh0PODGc4FEdKJFvWSywlVeOyXXlIKi/5
      Q/R35MF5TFx2JbJciRNXvEi2JM9QGm4gQIDY97XR+3K3Xx6ay5C4lwTJ5h2w53yqpmq6b/Pg
      NLoPfnc7v5+mlFII8S2lf9MJCPFNeisF4LruCx83O77Ea514ruvSzJ2Sl+XmWwDLc9Osbu03
      LYlm72VJvNaO10wvy823ABzHBk17KwkJcZr4FsDZi5dxSwfcvjtNsVILOychQuNbAF998Wtq
      rkFXJs3tL39NtmSFnZcQoTD9nkx39nD+whSaW6FU8+hKR8POS4hQ+BaAW83zD7/4JdQLDJ6/
      FnZOQoTGtwAuXf2MoaMsmDEybemwcxIiNL7HANN3b7G8tkLU1HGafM5YiNPEtwBGhgbZWN/k
      7t277B8Vw85JiND4FkBHzyBd6Qh7uzvki5WwcxIiNIG3QjiORzIZw3GcMPMRIlS+B8EA3//R
      v8FxXEwz8CVCvPMCv91fffVbtpYfMnD+Uz794HyYOQkRmsACULUi5z78lEikPcx8hAhV4DFA
      qVTiwfR9lC43xYnWFVgA+UIBXdfR5K5Q0cICC+CTj68RT6Tp7+l88pzn2iwurqAA166ytLrB
      3uY6xZpNJXfAxl42jJyFaJrAY4CHa5vcuPYe9+7O8t3vfACAZVmUSyU8pVheWqHqaOhRyFk7
      6FYJW4+gejtRSuF53pNYzz9+UxKvdeM9jtWsPY+X5RZYABNnBrh5a45PvvO9J8/FEyniURO7
      WuAwXyJ/VCBxbgLsEphRNE896cB5vhPntHchSbzTEU8phaZpTc3vRbF8C6CU2+NXv73F1Nlx
      Hswt8tknlx49f0CpUiFbcvnO9WscHBxiGia6V8eJpvHsOrquo5TCMIxnEvj642a8IYnXuvGa
      eez5stw0v2lRrFqFhaVlenoH6O7uwnjFM0Gu6z7zQx3HaeoFNYnXuvFc121qAbwsN9+D4Gg8
      STrdRm9Xkq3t5jXHC3HaBJbG4uxt5mZN+icuMxJmRkKEyHcEWJibRjejHB4VScRjYeckRGh8
      R4CJcxexPYPP/vVZDENuhhOty3cEMAyThTu/4S9/9nOWNuUYQLQu3z/vnusyduljzk9N8nBx
      G+gPOS0hwuFbAMXsNvfvz7C7l+XTz/5V2DkJERrfXaBM7zBnh7rp7Othd2s77JyECE3gzXC1
      ep1b//JPlO0w0xEiXIEFkEim6R8YoTOTDDMfIUIVWADlao2enh5iUTkNKlpXYAHoZpShoSHS
      iXiY+QgRqsACyKQSLCwskJN5gUQL892/yR8d0Nk/Qmc/dLTLMYBoXb4jQKVU4J/++Zfs721w
      7/5C2DkJERrfAhgcmeTK1Di7O4ecGRkOOychQhN4iufoKEvddnHsp6vDKKXIZrN0dXVxsLuJ
      rSVImh7x9i50u0zB0ujpaAslcSGaIbAACsUSsUQHhvF0kKiXC8w/XOH69Qxmop299VVqpoZb
      ctBrOep6RApAvFMCC2BkeIjZxTWq9aeT48bTGbozKdAMcvtbdA+MUi9ksa0Cmm6iA57n4Xne
      M43Ip3ldWol3uuI9/v40qyXyZbkFFkDV9ujv66R4lAMGgUZTfDaXI7G1RTZXok07ojOdJuVW
      ceIZPKvq2xQPNH2SXYnXmvGa3RMML87Ntyke4PDwkPWH05y5dIO+9lfrCpOmeIn3uk5FUzzA
      /Xu/Y+Mgz+LsTFMSEeI0CiyNnkyGgaFxEu19YeYjRKgCRwAFbK0vsbG1G2I6QoQreHr0Yp6j
      XJn2dlkmVbSuwAKIJ5IYpkl7m5zXF60rsAAOc0XeuzDB9uZmmPkIEargEUCz+Nlf/x3tXV1h
      5iNEqPxvh84eUPLi/Omf/BGd3bJGmGhdviNAtVwglUpzcHDAUUFWihety7cAkokYMzP3yB0d
      sHeQCzsnIULjv0BG3ePHP/63dHR2g1UiX7HJJCNh5ybEW+dbAHalwPTcEpbj0dV3hu/duBZ2
      XkKEwrcAxqbeZ2zq/bBzESJ0gfcC/cP/+Rm5quLyJ99lalQmxxWtKfA6QKFQCDMPIb4RgQUw
      NjaOYejEojIxlmhdgQWQLZSYOjvK7u7T2aGV57C6uo5CsbW+zNbeIQfbm5TqNtVClq2Do1CS
      FqJZfI8B6vUaH37wERt7R1y+ePbp87Ua2ewRZ/o7KDkmlPcwNcjWFLpVxNYjDHZ3oJR6pif4
      +cdvSuK1brywc/MtgO2NFRYWFrBcDT2a4sqFcQDiyTSpeBSlFKZp4jkGmh5B2SUwomiPftjz
      y9O/bLn613lTEq814z2O1cyFsl+Um28BdLSlmFtY5uzZSRz36T8u5Q4olEvsF230egEt3k5H
      Mobm1XFibXhWTVaKl3hv7BtfKd7zPFZXVxg+00+prtH5ivODSlO8xHtdp6IpXtd1VpYW2N/b
      Zn5hpSmJCHEaBfcEVw75L//1z8l0d4eZjxChChwbrn72B1y8ep2N/SyMyZVg0Zr8T4PWqizM
      z3CYr/HRDVkmVbQu312g7bUF7j5YwDQVS4trYeckRGh8C2D8/BUunxvHsiw6pCdYtLDAg+Bk
      MoHtQKYtFWY+QoQqsAD2j4p8dOU86+vrYeYjRKgCzwLF41FKdYNrH02FmY8QoQpeHyC3z+p2
      lmgqIw0xomUF7gK1d/aQjJnE49IPIFpXYAHkSxXGx4f5zT/+HaWaE/QyId5pgbtAl698SLlm
      88knnRh685arEeI0CRwBNDPK2bMTtLW1kYg271ZXIU4T3xHgaGeVv/jLv2J8fJypy99B1ogR
      rcp3BOgcGOP6h+9h2y564BghxLsv8Big7mpcvXqVzq7js0Mr5bI4Pw+xNGnNIdE3hFE54sDS
      GR/sfasJC9FMgQUQw2J6do4Ll5Jk0olntimnTrnmoOp5zESE/PYOul3G1SN4XvexHkzP85q+
      mLLEa814jxdZb1ZH2MtyCyyAkuXS05PhcGeLqbFnjwJcx8aIxvHsKkqPotklNDMOj5qZH//3
      2POP35TEa914mqahN3G/+2W5BRbAucmz3Jld5Hu/f3xiXDOWJh3bg7ZeutpS6MrGiSRRdv3J
      D/z6m/A8r6lvSuK1brzHf/2bOQK8KLfAAlhcfIhpRsnnC3Sln92v13SD8Um/e4QSPs8JcXoF
      loZl2WHmIcQ3InAEMCJRenr7SMajYeYjRKgCR4DOdJxitUa5bIWZjxChCp4evVRmZWGGgyNZ
      I0y0rsBdoJGzl/jw0wz5cvMmKhXitAkcATZXFrh583dUrOZNoirEaRM4Anz/R3+I47iYkebN
      ISnEaeP77Z67+yVf3pkjnYoz+f4NPrwwEnZeQoTCtwAufHCdje09+gcHKJVLYeckRGgCjwHO
      n51kdWOf8fHhMPMRIlSBBbC0tsH5qXPETGkIEK0r8NttKJvp6WkOcrILJFpXYAHoukapcEix
      KvcEidYVWACJ9i7aU3HsSjnMfIQIle8aYY95X2tweRWyRpjEe11hrxEWuOXWVzfZXH7IwPlP
      uXZF5gcVrSmwAOxyjsnLnxCJ+EyPrhSrywu4ZpKoXSLeN4pZyXJg6ZwbGXyb+QrRVL4FMPPV
      r1naPITNQz668YNj2516kbWtPXr7B9F1ncO9XXSnhqubeJ73pLH5sWY2YEu81o73+PvTrF2g
      l+XmWwCXPv4unlJobb0kzeOzwum6QUd3H5pXx9Pi6G4ZLZIC1/FdKBto6j6nxGvdeM0+BoAX
      5xa4Zf/ggIPFZUamrjE6/OysEHo0yXBPmqqK0ZGKoePiGnE8R5pnxLslsAAGBwYp1g3GRs/4
      bNXo7B2k89jz0j4p3i2B1wE6egZ4/70J1tc2wsxHiFD5FkC1WmHu/m3uTc/Tf8ZvBBCiNfgW
      wMztL1lY36Wzqwsd6QgTrcv3GODjGz9gfOoSSjPo6jq+py9Eq/AdATRNo7MjQ92y0Jt4OkqI
      0ybwQtjd+TUAPrrxAy6Oy9Vd0Zp8RwAznqK3Mx12LkKEzncEOH/pQ2ylo+x5rLr0A4jWFXgd
      4Ghnla7R8+hKzgKJ1hVYAAPjF6nurxFNyJTnonUFFsDKg1vQ1kcpdxRmPkKEKrAAMpkuDrY3
      aO/qCTMfIUIVWADFcoWe7k4KBZkdWrQu37NADx/OcWZsgr7+YTKZTNg5CREa3xGgLWZy69Zd
      7t29w9a+HAOI1vXCWSFel8wKIfFe16mZFeIf//avqbomFz+4xsTQ8dXfK/l9Hqwe0h11iA1M
      YJb32bcM3puQmaTFuyOwAOp1CwIqR3kO67s5khEgkqBwsIvmWWiaNMVLvDdzKpriAcxYjN6B
      IdLJ+LFtjlXDrtfY2tpj8twEuluBWDvYljTFS7w3cmqa4idHhvlqbo3h8XPHtkXiaS5fucy5
      qcbK8Doenh5BNfkvixBvW+B1gMX1La59cJa5+ZWAV2jE43FisRiRWIJYxCQej72dLIV4SwIL
      IBU1mXmwzOi4HNSK1hVYANnDQ3rPDBMzpSNMtC7fY4Dt7S0GRkZpS8bRdSkA0bp8R4Dy0R53
      7j9gY2ODUqUWdk5ChCbwSvDzV3NfhVwJlniv69RcCZ6bm2VreY7+qU+5cn60KckIcdoEHgQf
      bi3TOTKFJuf2RQsLLIBoNMba4iKxVDLMfIQIVXBDTKXO2NgY7WnpCRatK/hCWAT++Ve/oWrJ
      rBCidQUWQE1P8p//0x+zuboWZj5ChCqwAC6fP8vN24t8/PH7YeYjRKh8C2B+5g637txldXme
      pfXdsHMSIjSBUyMWylXqtSrlQg6QRTJEawpuiPEs3rv6KabZHmY+QoQq8BhAi6d5eOcm2UI+
      zHyECFXgCFDN7TN84QMiEZ8mF89lYeEhjhalzXBJ9I88WineYHKo/23mK0RT+RbA/MwdyjWb
      lTt3fFeKR9OZmJzk/uw8diJKaWcX3ang6hE8r/dYU7zneTiO07SkJV7rxnv+u9OMeC/KLfAg
      uF6toIw4idjxtX+VcnjwYJ4L711iZ20V3S6jRRLguo0eYV1H15/du3rdO0uDSLzWjKdp2pP/
      muVFuQXuAh3li/T29pOIRY5tU57C0DVWV9c409eLjoNrJlCO9STx599AM9+QxGvteM0ugBfF
      CiwAD0UymSRiHq8e3Yxy8ZLfBTJpihfvluC7QbH56tZt9o5KYeYjRKgCC6BSrTE+NUlxX64E
      i9YVWAD9/YPM37tHz7B0g4nW5dsTrDwP11OYpvFavcHSEyzxXlfYPcG+I8DNX/89f/Hn/52t
      owq3bv22KYkIcRr5FkC6rYuffP45v/v7n1Pxjl8HEKJV+I4Nw0MD/L///b9QkTaufnAl7JyE
      CI1vAdyfW+Ann/8xmp3j5t0ZPrv+Qdh5CREK3wIYG+zl53/1MzTP5bMf/TjsnIQIjW8BVD2T
      zz//HM2tsLB2CB3DYeclxFvlZI84+rM/8y+A4uEWvyvV0Sr7RHqOL5AhxLtGKYWq13EPs5R/
      9Stq0/dp/3c/CbgOoDzWlhfR4u2MDPbzqqdk5TqAxHtdzbwOoDwPa3cXZ2UFa3GJ2v37mL29
      JK9fJ/7Rh6hqzX8EWLj/FbNLWwBYV29wbqTvjZMRIgzKsrB3d6ndm6byxRdoqRTRgQG0eJz0
      D39IdHKC8i9+SeXmTczubv8CGD9/hVSmm63dQ9JJucNTnB7KtvFqNdxslvrDh3j5AiiFm8th
      rayi6nWc/X3QNGJTUyR+7we4K6tosRhmdxdmXx+d//E/oEUat/n7FkAkGmNm+jY1x8M12xno
      zoT6JsW3l3Jd3EoFL5vF3tzEzeVRtoWybLx8nvr8Q5RlNb7kuk50dITY+fN4lQrx9y+RuH4d
      ACPTjp5O45km5qPn/ATuuF2+eoOV+Wn6+48vki3Eq/BqNbxKFVUp4+zv4+zuNVYU1Wh8wS0L
      bBu3WMJeXwM0lGWhp1JEzgwSGRlBVauY/f3Er14lOjKMV7cwOjLo6fQLjxe8l7Rq+p8GLeX4
      4ot/4fzUJLvbW4wPdj6zXSmX+dlZiKZJeBVi/eOY5QMObIMLY0N4lQqF//E/0dvbiJ49i4pE
      sGt19HQao6sTzTTBU2jRCFo0+mQ4anVfX0ZW2TYAmmGgPA8cB+Wpxodp6Kh6HeV6aJHG4uOO
      ZTVeH4mAruOVK4BCM020SAS3VELZNno83nicy6FcFz2RRIuYOAcHAOjxBF7ExDrMNl6fTKAn
      EtjbO414kSh6KoW9uQmehxaLoSfi2NvbYDtgmmhmI56ybTRNx0Oh8vnGe/I8ME1UrQ4olOuh
      x2JoyQR6PIHR3YXR0QEa6IkkZm8feiqFFouiJ5PQ3o4Rj6MBaBo0uTvseb4FoKFhKpsvb83x
      +R99fmy7Uy0Ry/TiVfO4epT8wS6aU0fpjQ9LRSIYP/x9tGoVyzBwske4uztQq6P3dONVKliL
      yxjKI3LuLF6pjLe21ugnNkxUtYJy3caHkYgDjS+FphtgGCjloWk+tzE5Dkq9+mS+ylNofmuh
      uR4oD5RC2XbjdaYJroNnWeC48Ojsh6pWGv/GMBpf0EKx8QVKxNE0DTeXB6XQUkk008Q9OgJN
      R08+epzLgVLoiQRaLPbksZZIgGni5RvT0zyzHZ5+4QsFNMNAi8XQTBOvXG58ltFoo4jqdTQ0
      MA2IxlC21fgyGyZEI3iqkbseiaAMHQVgmOjRCJ7eiGtk2jE0rdG03teHFjEx02m0eBwzHkeL
      xYhkMiij8TlppokRiz3T6G4YxjOP9eceA1B7uizX86/3e6yUQimFrutPtj3uTbcsC8Mwnjx+
      frtvAcTTGZLtHfzhZxe4f+8Bn11/9n4gwzSplErg2CTjSXS7DLE2cGx0XceIRGgfebq8qjN2
      8tNkbi6Hk82+8DWe66L73KKtmSb4FcZLBMV7FdrXWkefnAbW9cZfxCcv0tB0A+W5gIamB+Rq
      6Hz93PPzp5U1XT/+Pg298f6PJaahPcrl8c/7tpwGhcYq8a+8RJLneQz19fC7W7N88t3fO7Zd
      j6Y409MG0UHipo6Oi2tEUe6bT41hdHQ0hsgXOM0fIIDW5Hg0O554wve3+sVvfsHg0AQXL3YR
      1f3naOno9rs28O3Ylxetw38EcBwqlcY+bZsja4SJ1uVbAP39gwyMT5GOy1900dr8j8Jci7XN
      nZBTESJ8AbdCXMZyZG0w0fp8C8CMRDHfcO/n+ZtMmznhqcRr3XiPz+k304vivZVza48vOHw9
      ga8/flMSr/XjNbOgXpTbWykATdOevXDz6KpbM+NLvNaM53leUyfHfVluvg0xQnxbGD/96U9/
      +jYC1ysFHiyu0ZGKMb+wwPb+EX09ndy7O01nR4rZ2QdosTSp+IvnHVLKY2nuHkaqh4PNJZaW
      Voim2lhdfIhnxDncXmUnW6K7q4OT/M1QymNl/h4q0U12e4WV5WWUYbK8tISNSX5/i+3DPN1d
      nSeK5zkWt+/NMNDfx9LDWXYOCiQMlwcLy6TaM6wszFG2oL09dbL8XJu70zP09vaxsvCArf0c
      ccNjYWkZLRJna3WRYs0l054+UTyrWmRmYZXezjSzsw8o1mw62tNM352mq6uN2ZlZiCRJJU7W
      92HXSszML9Pb1c6D2VnyFQvDrbK0tklbOsmDmVmUmThxH0khu8fabpa0qZidW8DVTPY2l5/5
      PaY7uoiaJxthtlbmKHlx6oV9FpdWaevoYHHuAVVXp1bYZ3Vzj+7uLvRHI0zzxsHn6VEMHKKJ
      NFMTIySTKbZWl7BcjZ3NbSYuXSa3t/3yOErRloxStjyGx8+RTqeo7K5ScjUcp0zdiZFwLeon
      zUspMqkopbrH0NgkqVSKmFfH0U1KhUNqtknKc6i9PNKjcAozYgAepWKVSqnIxn6OK5cmWJyZ
      JdU9RL188nXWPM8jEjXxlEupWKFaKpHIdHOmr4Ps3g6x9n6cSpGTDttKi2BqLk69Ss1yKRaL
      7KyvUHMUO+ubjL93hfzByU95e5qJoXu4dp1q3aFULPJwYRE8l+2VNUYvXaFwePIJlaPJdpxa
      iWqpgKcbFIu5Y7/HrY2Tx2tPJylX6+wd5rl4tp87v52m48wEtWKWQtnmTGeSbOnpp/vWCiAW
      jz/5//X1TYaHBznKFzja36JcrVGr1jjJmVZNN4hFGocqVvkILZ4hFo1yZniM/OEBjmNRd5wT
      vxFNN4hFG6e47GoBFWujXikzMDSMVas+iXfSW+OMSAzT0EDZEEnTFtGwHYdqtYYRjVKv13Fe
      4Wq6EYkRNTRQDspM0h7T2d3ZomBHmRjpw7Lqr7Qc0ePPwa5XaevqQ3Mssrkc+YMdStUa1VoV
      xzv5XnAs1rhV2bFqJDt6MTybWCLNyEA3uXyBaqWK4548XvxRfqVShcGREeqlo2O/R804+aFq
      LNYYecaGBpidWyTdlqReq+G4Ho5jU6vXMb52TPDW7rDK7m3j2A4HuSJdfY2b5i5/+DGj43lS
      6SQrS8uMTUy+NI5r19jOVqGyRaavk9Ghfkytl9XlJQZHzuGWj6ipKCedwNFzLDYOKniRTazB
      bkaHBjBUN0tLK4yMnYN6gZJjnjhetZTDsRw2dvL0d8Wp0c5kb4bltW0uXLrI3uYqmaHhE+2u
      ANTLeao1m63dHAPdKSpuhriu2MseUkwOkzQsooPDJy74o/0dHNuhrOJEnAPahkbo7+lkZCxP
      qi3F6tISo+MTJ4wG+cNdHNuhYBkkqJIZHKYzZbC+neXKtY9ZX15iZHz8hNEU2+urOLZDenCM
      /e1NRs9eopbbe+b3ODF50vw81jb3qSsTK95NsnOIyfFhNleXGRgaJeJV2C9YDKSe7p7JQbD4
      Vnt7xwBCvAOkAMS3mhSAeCcopajVaniuQ91u3hrH0mYk3hGKv/2bv2H0TDeZsctU9tYYnbrE
      1uIMqe5BdLeOHm9noOfF3YTPk4Ng8c4o7T/kv/3feb5/Mcnt9TJdXZ3E3Bpz8/MoM8Wf/vs/
      oSOdeKWYsgsk3hnp3n4m+nvo7j9DPBbj/GgP29kK3d3dnLt46ZW//CAjgPiWkxFAfKv9f95+
      aSbfHiTgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Time Lapse Map Per Capita' width='192'>
      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
      Av8/IMOfp7LdBZQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Time Lapse Map Total CO2 Emission per Year ' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
